Una vez configurado nuestro proyecto los archivos de docker-compose y dockerfile
ejecutamos el comando para realizar la instalcion de todas las dependencias necesarias

1. docker-compose up -d
2. docker-compose ps
verificamos el estatus de nuestros servicios

3. Agregamos a nuestro archivo de requerimientos el uso de django (Django==4.0.6)
4. docker-compose up -d --build
5. docker-compose exec app bash
Ingresa al contenedor del servicio app.
6.django-admin startproject siat .
Crea una estructura de directorio de proyectos de Django para el nombre del proyecto dado en el directorio actual o el destino dado.
7.python3 manage.py check
8.python3 manage.py startapp usuarios

************* CONEXION BD LOCAL **************
1. pip install django mssql-django
2. curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
3. curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list
4. apt-get update
5. ACCEPT_EULA=Y apt-get install -y msodbcsql17
6. ACCEPT_EULA=Y apt-get install -y mssql-tools	
7. echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
8. source ~/.bashrc
9. nano /etc/ssl/openssl.cnf
10. MinProtocol = TLSv1.0
********** PARA LA GENERACION DE MODELS DESDE UNA BASE DE DATOS ****
1. Modificamos nuestro settings de nuestro proyecto y apuntamos a la base de datos de la cual 
vamos a extraer las tablas a modelos
2. despues tecleamos el comando python3 manage.py inspectdb > models_otros.py
3. despues creamos las migraciones con make migrations
4. despues generamos las tablas con migrate
5. comenzamos con la creacion de las vistas, clases, formularios
********** 



